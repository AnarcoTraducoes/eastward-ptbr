return {
["LocationName"]={
	["name::scene/design/env/Dam/Town/Bazar.scene"] = "Dragon Gate";
	["name::scene/design/env/Dam/Town/BigFan.scene"] = "Budda Fan";
	["name::scene/design/env/Dam/Town/Hall.scene"] = "The Station";
	["name::scene/design/env/Dam/Town/OutterCasino.scene"] = "Dam Top";
	["name::scene/design/env/Dam/Town/Suburb.scene"] = "Onsei";
	["name::scene/design/env/Dam/Town/ThirdStation.scene"] = "Damhill";
	["name::scene/design/env/Dam/Town/TownBottom.scene"] = "The Down Town";
	["name::scene/design/env/Dam/Town/TownMid.scene"] = "The Middle Town";
	["name::scene/design/env/Dam/Town/TownTop.scene"] = "The Up Town";
	["name::scene/design/env/Dam/Town/TownUp.scene"] = "Ave. Princess";
	["name::scene/design/env/Dam/Town/Troupe.scene"] = "City Park";
	["name::scene/design/env/Dam/Room/Bar.scene"] = "Jazz 21";
	["name::scene/design/env/Dam/Room/Casino.scene"] = "\"Qian Wu\"";
	["name::scene/design/env/Dam/Room/Crab.scene"] = "Dali";
	["name::scene/design/env/Dam/Room/Food.scene"] = "The Grocery";
	["name::scene/design/env/Dam/Room/Gear.scene"] = "The Jonny's";
	["name::scene/design/env/Dam/Room/Hangar.scene"] = "Hangar";
	["name::scene/design/env/Dam/Room/LawOffice.scene"] = "Office Benjamin";
	["name::scene/design/env/Dam/Room/OldHouse_Inner.scene"] = "Alva's Home";
	["name::scene/design/env/Dam/Room/OldHouse_Outter.scene"] = "Rocket Mansion";
	["name::scene/design/env/Dam/Room/Pub.scene"] = "Bar Denki";
	["name::scene/design/env/Dam/Room/Shop.scene"] = "Tayama Shop";
	["name::scene/design/env/Dam/Room/Subway.scene"] = "Subway";
	["name::scene/design/env/Dam/Room/Temple"] = "The Temple";
	["name::scene/design/env/Dam/Room/Yokujo.scene"] = "Bath";
	["name::scene/design/env/Dam/Dungeon/FanArea"] = "The Dam ( Inside )";
	["name::scene/design/env/Dam/Dungeon/OutField/Station.scene"] = "Another Station";
	["name::scene/design/env/Dam/Dungeon/OldTown/10.scene"] = "Thorns Land";
	["name::scene/design/env/Dam/Dungeon/OldTown/HumanFactory.scene"] = "Human Factory";
	["name::scene/design/env/Dam/Dungeon/OldTown/OldAbode.scene"] = "Granpa's House";
	["name::scene/design/env/Dam/Dungeon/OldTown"] = "The Old Town";
	["name::scene/design/env/Dam/Dungeon/FanArea/ToOutField.scene"] = "The Dam ( Inside )";
	["name::scene/design/env/Dam/Dungeon/FanArea/02.scene"] = "Central Water Gate";
	["name::scene/design/env/Dam/Dungeon/FanArea/32.scene"] = "The Dam ( Bottom )";
	["name::scene/design/env/Dam/Dungeon/FanArea/44_up.scene"] = "The Dam ( Top )";
	["name::scene/design/env/Dam/Dungeon/FanArea/21.scene"] = "The Dam ( Core )";
	["name::scene/design/env/Sand/Town/SandTown_Cemetery.scene"] = "The Tomb Land";
	["name::scene/design/env/Sand/Town/SandTown_Farm.scene"] = "Sunny Farm";
	["name::scene/design/env/Sand/Town/SandTown_Jail_Inner.scene"] = "Jail";
	["name::scene/design/env/Sand/Town/SandTown_Mayor_Manor.scene"] = "Mayor's Manor";
	["name::scene/design/env/Sand/Town/SandTown_Room_Bar.scene"] = "Bar";
	["name::scene/design/env/Sand/Town/SandTown_Room_FoodStore.scene"] = "Grocery \"NIHAO\"";
	["name::scene/design/env/Sand/Town/SandTown_Room_GearStore.scene"] = "The Jonny's";
	["name::scene/design/env/Sand/Town/SandTown_Room_JohnHouse.scene"] = "John's House";
	["name::scene/design/env/Sand/Town/SandTown_School_Inner_01.scene"] = "Sandfill School";
	["name::scene/design/env/Sand/Town/SandTown_School_Inner_02.scene"] = "Sandfill School";
	["name::scene/design/env/Sand/Town/SandTown_Station.scene"] = "The Gate";
	["name::scene/design/env/Sand/Town/SandTown_Town_Dorm.scene"] = "Home Of Diggers";
	["name::scene/design/env/Sand/Town/SandTown_Town_East.scene"] = "Sandfill";
	["name::scene/design/env/Sand/Town/SandTown_Town_Middle.scene"] = "Sandfill";
	["name::scene/design/env/Sand/Town/SandTown_Town_NorthEast.scene"] = "School Square";
	["name::scene/design/env/Sand/Dungeon/Mine"] = "Digsite";
	["name::scene/design/env/Green/Town/Village.scene"] = "Greenberg";
	["name::scene/design/env/Green/Dungeon"] = "Odd Woods";
	["name::scene/design/env/Green/Town/HumanFactory.scene"] = "A Factory";
	["name::scene/design/env/Green/Town/HunterHut.scene"] = "The Hut";
	["name::scene/design/env/Green/Town/Mountain"] = "Valley";
	["name::scene/design/env/Green/Town/RoomOffice.scene"] = "The Wood Whale";
	["name::scene/design/env/Green/Town/RoomShop.scene"] = "Grocery \"DOG KK\"";
	["name::scene/design/env/Green/Town/SecondHall.scene"] = "The Hall";
	["name::scene/design/env/Green/Town/SecondStation.scene"] = "The Station";
	["name::scene/design/env/Monkey/Human"] = "Human Factory";
	["name::scene/design/env/Monkey/East/Bedroom.scene"] = "Solomon's";
	["name::scene/design/env/Ester/Tower/Boss.scene"] = "Ester City";
	["name::scene/design/env/Sand/Dungeon/Mall"] = "Ancient Ruin";
	["name::scene/design/env/Sand/Dungeon/SandTown_Jail_Behind_Maze.scene"] = "Hot Tunnel";
	["name::scene/demo/Town/RoomHut.scene"] = "Hunter's Hut";
	["name::scene/demo/Town/HunterHut.scene"] = "Hunter's Hut";
	["name::scene/demo/Dungeon"] = "Odd Forest";
	["name::scene/demo/Town/Bazar.scene"] = "Kowloon";
	["name::scene/demo/Town/TownMid.scene"] = "Sunflower Slope";
	["name::scene/demo/Town/Shop.scene"] = "Tayama House";
	["name::scene/demo/Town/Gear.scene"] = "Jonny's";
	["name::「卡戎」博物馆"] = "Charon Museum";
	["name::下水道"] = "Lowtown";
	["name::荆棘花园"] = "Bramble Garden";
	["name::地下铁"] = "Subway";
	["name::「大佛风扇」"] = "The Buddha Fan";
	["name::大坝控制室"] = "Dam Control Room";
	["name::尤瓦的家"] = "Uva's House";
	["name::挖掘场"] = "Dig Site";
	["name::波特岛"] = "Potcrock Isle";
	["name::人类工厂"] = "Human Factory";
	["name::约翰的家"] = "John's House";
	["name::风神庙"] = "Wind Shrine";
	["name::猎人小屋"] = "Hunter's Cabin";
	["name::电气螳螂酒铺"] = "Lightning Mac's";
	["name::「大」站"] = "The \"Big\" Station";
	["name::快乐湾"] = "Pleasure Bay";
	["name::「猪场」"] = "Blimpig Ranch";
	["name::大坝核心"] = "Dam Central Core";
	["name::火箭公寓"] = "Rocket Mansion";
	["name::大坝城"] = "New Dam City";
	["name::「铁梦丸」"] = "The Iron Carbine";
	["name::阳光农场"] = "Sunnyside Ranch";
	["name::力汤温泉"] = "Hot Springs";
	["name::山道"] = "Mountain Pass";
	["name::「老爹」酒吧"] = "Pop's Place";
	["name::艾娃的家"] = "Alva's House";
	["name::爷爷的家"] = "Grandpop's House";
	["name::大坝上层"] = "Upper Dam";
	["name::所罗门行宫"] = "Solomon's Chateau";
	["name::放映厅"] = "Theater";
	["name::秘道"] = "Secret Path";
	["name::「钱屋」"] = "The Coin Palace";
	["name::大坝城外"] = "City Outskirts";
	["name::地震谷"] = "Quake Valley";
	["name::「卡戎之喉」"] = "Charon's Throat";
	["name::火箭墓场"] = "Rocket Cemetery";
	["name::赤火箭修理厂"] = "Red Rocket Repair";
	["name::大坝维修通道"] = "Maintenance Tunnel";
	["name::时间岛"] = "Island of Time";
	["name::艾娃实验室"] = "Alva's Lab";
	["name::「未来」旅馆"] = "Ester Hotel";
	["name::「鲶鱼」巢穴"] = "Temblor Nest";
	["name::蜜蜂狗超级市场"] = "DogBee Grocery";
	["name::列车墓地"] = "Train Graveyard";
	["name::无限大厦"] = "Eternal Tower";
	["name::摄影棚"] = "Studio";
	["name::「你好」杂货铺"] = "Hello Grocery";
	["name::「烂皮海盗团」"] = "The Lumpy Pirates";
	["name::山谷"] = "Valley";
	["name::木鲸鱼"] = "The Woodwhale";
	["name::格林堡"] = "Greenberg";
	["name::无限大厦四号平台"] = "Eternal Tower Platform #4";
	["name::墓室"] = "Grave";
	["name::废弃的民居"] = "Abandoned House";
	["name::？？？"] = "???";
	["name::时间岛墓地"] = "Cemetery";
	["name::波特岛小学"] = "Potcrock School";
	["name::强尼商店"] = "Johnny's Emporium";
	["name::智慧大街"] = "Wisdom Street";
	["name::废弃铁路"] = "Abandoned Tracks";
	["name::无限大厦二号平台"] = "Eternal Tower Platform #2";
	["name::五号码头"] = "Dock #5";
	["name::「未来」"] = "Ester City";
	["name::大坝公园"] = "Central Park";
	["name::特摄车厢"] = "Special Effects Car";
	["name::公主街"] = "Princess Avenue";
	["name::化妆一科"] = "Dressing Room 1";
	["name::道具车厢"] = "Storage Car";
	["name::田山商店"] = "Tayama's";
	["name::旧大坝城"] = "Oldtown";
	["name::大坝下层"] = "Lower Dam";
	["name::大坝中央闸门"] = "Central Sluice";
	["name::大坝内部"] = "Inside the Dam";
	["name::爵士妈咪"] = "Mama Jazz";
	["name::「白鲸港」车站"] = "Whitewhale Bay Station";
	["name::向阳坡"] = "Midtown";
	["name::大坝城车站"] = "New Dam City Station";
	["name::龙门市场"] = "Dragon Market";
	["name::古代遗迹"] = "Ancient Ruins";
	["name::怪异森林"] = "Strange Forest";
	["name::长老公馆"] = "Mayor's Estate";
	["name::「卡戎」"] = "Charon";
	["name::学校前"] = "School Front";
	["name::「挖掘家」宿舍"] = "Digger Dorms";
	["name::车站大厅"] = "Station Lobby";
	["name::地底洞穴"] = "Underground Tunnel";
	["name::波特蟹巢穴"] = "Pot Crab Nest";
	["name::爵士二十一"] = "Jazz 21";
	["name::十八铺"] = "Uptown";
	["name::山佬的农场"] = "Hillman's Ranch";
	["name::大力水产"] = "The King Krab";
	["name::友好商店"] = "The Friendly Spendie";
	["name::森林入口"] = "Forest Entrance";
	["name::无限大厦三号平台"] = "Eternal Tower Platform #3";
	["name::小狗开开"] = "K.K. Dog's";
	};
["quest_CH3"]={
	["text::Damhill"] = "New Dam City";
	["text::Metropolis"] = "I've never seen such a big city! It's probably full of all kinds of challenges and opportunities.";
	["text::Alva"] = "Seems Alva's Lab is currently looking for lab assistants. Why not check it out?";
	["text::Experiment"] = "The Princess's Lab";
	["text::Mission"] = "Our first mission from Alva—to retrieve a slime-breeding furnace from Oldtown.";
	["text::BroCons"] = "The station outside town is swarming with monsters. Take them out!";
	["text::MissionCompleat"] = "Mission accomplished! Report back to Alva with the slime-breeding furnace.";
	["text::Casino"] = "The Coin Palace";
	["text::Adventure"] = "Go check out the Coin Palace. It seems like a fun place.";
	["text::JohnWake"] = "It's time to eat, and Sam's not back yet. Hopefully she's okay.";
	["text::Li"] = "The Coin Palace is such a fun place, it almost made me forget about dinner!";
	["text::Food_01"] = "A Berry Good Jam";
	["text::Berry"] = "Today's recipe calls for glazy berries. But to get some, we'll have to visit Hillman's Ranch outside town.";
	["text::Daniel"] = "Glazy berries in hand, all that's left is to head back to the Rocket Mansion and show Lee up!";
	["text::Food_02"] = "A Big Dam Plan";
	["text::NewMenu"] = "The famous King Krabs are back in stock. Better go place an order!";
	["text::Ingredients"] = "Once we buy King Krabs, we can start cooking.";
	["text::Crab"] = "The King Krabs have run away! Nab them before they get away for good.";
	["text::Troupe"] = "The troupe's in trouble! We can't just stand by and watch this happen, can we?";
	["text::Food_03"] = "A Golden Feast";
	["text::Rendezvous"] = "Meet William and Daniel at the \"Big\" Station.";
	["text::WetLand"] = "Quake Valley is to the east at the far end of the junkyard.";
	["text::Fish"] = "Find the Temblor Fish and we find the Golden Valley Snapper.";
	["text::LastChance"] = "This is our last chance! Back to the Rocket Mansion to face off against Lee.";
	["text::Yokujo"] = "To the Hot Springs";
	["text::Ch3end"] = "If we don't have anything else to do, let's meet up with \nAlva and Isabel at the hot springs \noutside the city.";
	["text::MissionNext"] = "The path to Oldtown has been opened up. Time to find that slime-breeding furnace.";
	["text::ExperimentFinish"] = "As soon as we reached New Dam City, we found the perfect job—lab assistants at Alva's Lab! Even better? Alva gave me a pair of shoes, and they look amazing!";
	["text::CasinoFinish"] = "Had a blast at the Coin Palace today. Then, we got to meet Lee. He seems pretty cool. Not sure why everyone is so scared of him.";
	["text::Food01Finish"] = "We may have failed with the glazy berries, but that doesn't mean it's over. Next time, we'll definitely make Lee eat his words!";
	["text::Food02Finish"] = "Because we decided to help the troupe, we ended up failing big time with our crab pot. We only have one more chance to win.";
	["text::Food03Finish"] = "Lee said the meal tasted like friendship. So deep! I feel like I... kinda understand what he means.";
	["text::YokujoFinish"] = "Every day has been an adventure since we arrived in New Dam City, from becoming Alva's lab assistants to winning a bet against Lee. I wish I could tell my friends back in Potcrock Isle all about it! But even more, I hope that we can stay in New Dam City for good.";
	};
["CH_Fridge_mini.sq"]={
	["cd27917d1a3611ea86ac8c85907abf45"] = "You can refrigerate your memories here.\n{====}But when you take them out again...\n{====}...will the new you really be you?";
	["cd2792dc1a3611ea94688c85907abf45"] = "How strange...\n{====}You must have gone through quite a lot.\n{====}There are even more... colors in your memories than before.";
	["66657116f80911eaac1b3c15c2dd513c"] = "Whenever you run into me in the wild, be sure to save your memories.\n{====}You never know what might await you on the path ahead.";
	["cd2793c21a3611eabdda8c85907abf45"] = "Have you heard?\n{====}{big}They say you can see another world through the static of the television.";
	["66657210f80911eaac1b3c15c2dd513c"] = "Money, status, fame.\nLaughter, tears, song.\n{====}All of these exist along the path of your memories.";
	["cd27948a1a3611eaa2198c85907abf45"] = "Memories are different from other things.\n{====}It may be cold here, but if you don't store them properly...\n{====}...they'll still go bad.";
	["cd2795331a3611eaba9f8c85907abf45"] = "Despair is like the ice in your memories.\n{====}Until you're able to forget, the ice will never thaw.";
	["6665727ef80911eaac1b3c15c2dd513c"] = "There are countless memories in here, some even older than me.\n{====}But I'm afraid that no one will ever load them again...";
	["666572d8f80911eaac1b3c15c2dd513c"] = "There's a giant whale at the top of this mountain.\n{====}Legend has it, it's a monster that consumes memories.";
	["cd27969c1a3611eab4758c85907abf45"] = "{signal:open}Save your memories?\n{choice:yes}Save\n{choice:no}Cancel";
	};
["quest_CH7"]={
	["text::EsterCity"] = "One second, we're in Ester City. And the next? We've been whisked away to the Island of Time!";
	["text::Daniel"] = "Daniel can't have his operation without the emotion chip. Floyd, back on the Island of Time, should have it. Let's go get it.";
	["text::Flag"] = "The captain's flag has gone missing! Find it so the pirates can set sail.";
	["text::Express"] = "We've somehow become delivery people for Cap'n Pam, and now we need to deliver letters to people in Ester City.";
	["text::Delivery"] = "We've finished making all the deliveries! Let's head back to the dock for our reward.";
	["text::TinderOfTime"] = "Use the Flame of Time to enter the Eternal Tower.";
	["text::EmoChip"] = "We're back on the Island of Time again! At any rate, let's see if we can get Floyd to give us that emotion chip.";
	["text::Tomas"] = "To find out more about Isabel, it looks like we'll need to go find a man named Thomas on the Island of Time.";
	["text::Operation"] = "Let's get that emotion chip over to Red Rocket Repair so Daniel can have his operation.";
	["text::Isabel"] = "Isabel";
	["text::Message"] = "Isabel must have left other messages around Ester City. Let's use the Sonic Punk to find them!";
	["text::LastTinder"] = "Back to the Island of Time! Where the final clue awaits!";
	["text::EsterTower"] = "The Eternal Tower";
	["text::Grave"] = "The Flame of Time just has to be in Solomon's grave.";
	["text::Tower"] = "Alva and Isabel must be at the top of the tower. Let's go!";
	["text::TimeLoop1st"] = "Ester City";
	["text::ExpressNext"] = "Looks like there's one last letter to deliver—this time to Ivan at the Ester Hotel.";
	["text::EsterCityFinish"] = "We finally made it to Ester City! And became... delivery people? But more importantly, we found out Daniel wasn't able to have his operation. We should help him out before looking for Isabel.";
	["text::TimeLoop2nd"] = "Daniel";
	["text::Megaboy"] = "Thomas tells us to find him at the Train Graveyard after Daniel's operation is finished.";
	["text::Megaboy01"] = "Quick! Follow the Sonic Punk! He must have found something!";
	["text::DanielFinish"] = "We finally saw Isabel! Well, her projection, to be more accurate. But now it feels like we're closer to finding her than ever!";
	["text::TimeLoop3rd"] = "A Look into the Past";
	["text::IsabelFinish"] = "Thanks to Isabel's clues, we were able to find the Flame of Time. All that's left now is to enter the Eternal Tower.";
	["text::TimeLoop4th"] = "The Eternal Tower";
	["text::Alva"] = "The time field's been deactivated, revealing the true Ester City... We still need to get to the top of the Eternal Tower.";
	["text::EsterTowerFinish"] = "Alva wasn't here. Isabel wasn't here either. The only thing we found was Charon. Daniel was destroyed. And now SHE's taken control of me again...";
	["text::Ester"] = "Ester City";
	["text::Loop"] = "Looking for Clues";
	["text::EsterCity01"] = "We've returned to the Island of Time. This time we're definitely going to figure out what's going on!";
	["text::Express01"] = "It seems we're in some kind of cycle—we still need to deliver the same letters to the same people of Ester City.";
	["text::Delivery01"] = "It seems Floyd at the graveyard has the emotion chip that Daniel needs for his operation. Hopefully Cap'n Pam will take us back to the Island of Time!";
	["text::EsterCityFinish01"] = "There's definitely something up with Ester City—but we haven't figured out what yet. At least we know what to do about Daniel's operation though!";
	["text::Stage_Daniel"] = "Daniel";
	["text::Express02"] = "Daniel's operation is over, but we've still got other deliveries to make before we're done.";
	["text::Delivery02"] = "Everything seems to be done for now, so let's head back to the dock. Cap'n Pam seemed like he had something else for us to do.";
	["text::Stage_Tomas"] = "Blast from the Past";
	["text::TomasBack"] = "Thomas will wait for us back at the dock. Then, it's back to Ester City!";
	["text::TomasExpress"] = "More letters to deliver! Hopefully, after we're done, we'll finally learn something about Isabel.";
	["text::TomasDelivery"] = "Let's head back to the dock and find Thomas.";
	["text::TowerBottom"] = "Seems Cap'n Pam and Thomas have already left for the Eternal Tower. They must have found something!";
	["text::Stage_Tower"] = "The Eternal Tower";
	};
["ItemName"]={
	["name::bomb"] = "Bomb";
	["desc::bomb"] = "A common bomb. Easy to use. Does what you'd think.";
	["name::bomb_remote"] = "Remote Bomb";
	["desc::bomb_remote"] = "Bomb for exploding things at a distance. Just don't forget to flip the switch.";
	["name::bomb_float"] = "Floater Bomb";
	["desc::bomb_float"] = "Float your way to destruction. Less powerful than a normal bomb.";
	["name::shotgun"] = "Bang-Bang Gun";
	["desc::shotgun"] = "A powerful gun with limited range.";
	["name::stick"] = "Frying Pan";
	["desc::stick"] = "A basic weapon. Also John's favorite cookware.";
	["name::flame"] = "Scepter of Flame";
	["desc::flame"] = "A flamethrower-type weapon. Watch your ammo!";
	["name::cog"] = "Cog Shooter";
	["desc::cog"] = "The cogs this shooter shoots ricochet back and forth between enemies.";
	["name::energy_stun"] = "Energy Blast";
	["desc::energy_stun"] = "Stuns all monsters in view.";
	["name::energy_heal"] = "Energy Heal";
	["desc::energy_heal"] = "Slowly recovers hearts.";
	["name::potion"] = "Bento";
	["desc::potion"] = "A cheap bento, not very tasty.";
	["name::revive"] = "S.O.S.";
	["desc::revive"] = "Brings you back to your feet when you can no longer fight.";
	["name::bomb_pack"] = "Small Bomb Pack";
	["desc::bomb_pack"] = "It reloads half  amounts of the maximum bombs.";
	["name::service_charge_ammo"] = "Quick Stock";
	["desc::service_charge_ammo"] = "Use to immediately restock your ammo and bombs.";
	["name::part_hp"] = "Heart Jewel";
	["detail::shotgun"] = "While powerful, the sheer intensity of its noise hasn't boded well for its popularity.";
	["detail::stick"] = "John's favorite pan. Legend has it, some young girls also used this as their weapon. Don't forget to clean it after battle before using it to cook again!";
	["detail::flame"] = "An old squirt gun of Alva's grandpop that the Sonic Punk transformed into a flaming weapon of destruction.";
	["detail::cog"] = "A Monkollywood prop. Has been shown to be a safety hazard, however, and they're phasing it out.";
	["detail::bomb"] = "Bomb designs may differ between regions, but they're all for the same purpose—blowing things up.";
	["detail::bomb_remote"] = "Its square design promotes greater stability. Don't want those bombs rolling away on you, now, do you?";
	["detail::bomb_float"] = "It's a bomb in a balloon! Use to blow things up in hard-to-reach places.";
	["name::service_upgrade_shotgun"] = "Gun Upgrade";
	["desc::service_upgrade_shotgun"] = "An upgrade for the Bang-Bang Gun.";
	["name::service_upgrade_flame"] = "Flame Upgrade";
	["desc::service_upgrade_flame"] = "An upgrade for the Scepter of Flame. ";
	["name::service_upgrade_cog"] = "Cog Upgrade";
	["desc::service_upgrade_cog"] = "An upgrade for the Cog Shooter.";
	["name::service_upgrade_bomb"] = "Bomb Upgrade";
	["desc::service_upgrade_bomb"] = "An upgrade for bombs.";
	["detail::service_upgrade_bomb"] = "";
	["name::service_upgrade_bomb_cap"] = "Bomb Box Expansion";
	["desc::service_upgrade_bomb_cap"] = "Allows you to carry more bombs.";
	["name::service_upgrade_ammo_cap"] = "Ammo Box Expansion";
	["desc::service_upgrade_ammo_cap"] = "Allows you to carry more ammo.";
	["detail::potion"] = "Common bento, one bite is enough to defeat the hunger, but no one want another bite.";
	["detail::revive"] = "In dangerous times is when true friends appear.";
	["name::ammo_pack"] = "Small Ammo Pack";
	["desc::ammo_pack"] = "It reloads half amounts of the maximum ammunition box.";
	["detail::ammo_pack"] = "A small pack of ammo, It reloads half amounts of  the maximum ammunition box. ";
	["name::ammo_pack_full"] = "Ammo Pack";
	["desc::ammo_pack_full"] = "Refills your ammo.";
	["detail::ammo_pack_full"] = "Completely refills your weapons' ammo.";
	["detail::bomb_pack"] = "A small pack of bomb to solve your urgent need.";
	["name::bomb_pack_full"] = "Bomb Pack";
	["desc::bomb_pack_full"] = "Refills your bombs.";
	["detail::bomb_pack_full"] = "Completely refills your bombs. You're in the clear now.";
	["name::info_cap_bullet"] = "Ammo Box";
	["desc::info_cap_bullet"] = "Small box for storing ammo.";
	["detail::info_cap_bullet"] = "Can be upgraded at Johnny's Emporium with the right materials.";
	["name::info_cap_bomb"] = "Bomb Box";
	["desc::info_cap_bomb"] = "Small box for storing bombs.";
	["detail::info_cap_bomb"] = "Can be upgraded at Johnny's Emporium with the right materials.";
	["name::info_cap_pouch"] = "Backpack";
	["desc::info_cap_pouch"] = "John's backpack.";
	["detail::info_cap_pouch"] = "Think carefully about each item you put inside. Space is limited.";
	["name::info_sam_energy"] = "Sam";
	["desc::info_sam_energy"] = "Using Sam's power consumes her energy. It will slowly refill over time.";
	["detail::info_sam_energy"] = "Using Sam's power consumes her energy. It will slowly refill over time.";
	["name::info_sam_orb"] = "Energy Bubble";
	["desc::info_sam_orb"] = "Sam's light orb. Can be used to constrict monsters.";
	["detail::info_sam_orb"] = "Sam's light orb. Can't be used on humans, but may have other purposes.";
	["detail::energy_stun"] = "Releases stored energy to attack enemies.";
	["detail::energy_heal"] = "Converts energy into hearts. Strangely enough, it only works on John and Sam.";
	["name::service_upgrade_pouch"] = "Backpack Expansion";
	["desc::service_upgrade_pouch"] = "Allows you to carry more items in your backpack.";
	["desc::part_hp"] = "Jewel shimmering with life energy.";
	["name::apple_jam"] = "Apple Jam";
	["desc::apple_jam"] = "A simple jam.";
	["detail::apple_jam"] = "A simple apple jam hidden inside glazy berry jam packaging. William's doing, no doubt.";
	["name::fake_jam"] = "Glazy Berry Jam";
	["desc::fake_jam"] = "Glazy berry jam. Its taste is out of this world!";
	["detail::fake_jam"] = "Jam made from legit glazy berries. A must-have accompaniment for rolls.";
	["name::info_salt"] = "Salt";
	["desc::info_salt"] = "The sole form of coin.";
	["detail::info_salt"] = "There's no such thing as a free lunch. That's why people in Eastward use salt as currency.";
	["name::energy_shell"] = "Energy Shield";
	["desc::energy_shell"] = "A sturdy shield that lasts for a short time.";
	["detail::energy_shell"] = "Sam shapes her energy into a powerful shield. Requries a great deal of energy, so can't be used for long.";
	["name::megaboy_button"] = "Sonic Punk";
	["desc::megaboy_button"] = "Call the Sonic Punk for an emergency top-up of ammo.";
	["detail::megaboy_button"] = "A mysterious robot. All-seeing and all-powerful.";
	["name::service_mini_game_card"] = "Memory Card";
	["desc::service_mini_game_card"] = "A memory card for Earth Born. Necessary to play the game.";
	["name::part_health"] = "Heart Orb";
	["desc::part_health"] = "Orb shimmering with life energy.";
	["name::info_sam_ability_1"] = "Energy Blast";
	["name::info_sam_ability_2"] = "Energy Shield";
	["name::info_sam_ability_3"] = "Energy Heal";
	["name::coin1"] = "Token";
	["desc::coin1"] = "Used to get Pixballs.";
	["detail::coin1"] = "With Earth Born's rise to stardom, so, too, did the Pixball take off. Tokens for getting Pixballs can now be found in every corner of the world.";
	["name::gear1"] = "Gear Part!";
	["name::gear2"] = "Advanced Gear Part";
	};
["quest_CH6"]={
	["text::Eastward"] = "Eastward Bound";
	["text::Home"] = "I've decided to go looking for Alva—and find a way to destroy the MIASMA! However, first I need to find a way to get to Ester City.";
	["text::MonkeyTrain"] = "Monkollywood";
	["text::Monkeys"] = "The Iron Carbine has gotten itself stuck in some fog. Perhaps there's a clue for how to get out aboard this train. Might as well look while the Iron Carbine's being fixed.";
	["text::Movie"] = "The monkeys ask John to be in their movie. As payment, they've offered to give us their rocket.";
	["text::Stuffroom"] = "The rocket is in the storage car up ahead.";
	["text::Night"] = "Turns out the Rocket Knight's rocket was nothing more than a piece of the set. It's already pretty late, so let's go find the producer and get some rest. We'll come up with a plan tomorrow.";
	["text::Solomon"] = "Solomon";
	["text::Stealth"] = "Another Solomon appeared, and he locked us up with the monkeys. Before we'll be able to take him on, we'll need to find our weapons.";
	["text::SolomonShow"] = "It's time to take down Solomon!";
	["text::EastwardFinish"] = "We're finally on the road again, this time with William and Daniel. I just know we'll find Alva and Isabel. I know!";
	["text::MonkeyTrainFinish"] = "We got stuck in some weird fog and ended up on a train full of monkeys! The clue to getting out—and making it to Ester City—has got to be hidden here somewhere.";
	["text::Rocket"] = "Isabel's rocket is somewhere here in Monkollywood. If we find it, we should be able to blast through the fog.";
	["text::SolomonFinish"] = "Daniel attached Isabel's rocket to the Iron Carbine. Ester City feels closer now than ever. We're so close to finding Alva and Isabel!";
	};
["quest_CH2"]={
	["text::Greenberg"] = "Greenberg";
	["text::OldNewHouse"] = "Uva said there's an old cabin outside town we can stay in.";
	["text::PigYard"] = "Seems the Blimpig Ranch is short on hands. We can find it near the entrance to the Strange Forest.";
	["text::Dinner"] = "Uva's already finished making dinner. Let's get back to Greenberg.";
	["text::Hunting"] = "An Uninvited Guest";
	["text::Hunt"] = "Chase the rascally fence-breaking scoundrel and teach him a lesson.";
	["text::HumanFactory"] = "A strange facility deep in the Strange Forest. Let's get out of here quick—this place gives me the creeps!";
	["text::Ceremony"] = "With everything wrapped up, all that's left is to enjoy the night's party!";
	["text::Miasma"] = "MIASMA";
	["text::Escape"] = "Head to the station—quick! It's the only way out.";
	["text::WhiteWhale"] = "Whitewhale Bay doesn't look that dangerous. Let's go check it out.";
	["text::GreenbergFinish"] = "Our first day on the surface, we discover a village called Greenberg. The mayor here is super nice. We also met a kind-hearted lady named Uva. Everyone has been so welcoming.";
	["text::HuntingFinish"] = "We hunted down the criminal who broke the Blimpig Ranch's fence! Feels like we're Greenberg's new protectors. Things turned creepy when we ran into a strange facility in the forest, but the amazing party more than made up for it!";
	["text::MiasmaFinish"] = "The MIASMA swallowed Greenberg, leaving us with no choice but to run once more...";
	};
["StoryItemName"]={
	["name::book_wildlove"] = "Wild Love";
	["desc::book_wildlove"] = "You'll go wild for this magazine.";
	["name::book_earthborn"] = "Earth Born Manga";
	["desc::book_earthborn"] = "Written for kids, but loved by all.";
	["name::sluggel"] = "Gel";
	["desc::sluggel"] = "Dropped from slugs in the dig site. Gross but useful.";
	["name::BreedingFurnace"] = "Slime-Breeding Furnace";
	["desc::BreedingFurnace"] = "Equipment used by Alva's grandpop. Left behind in Oldtown during the evacuation. Supposedly an important component of MIASMA research.";
	["name::pirateflag"] = "Pirate Flag";
	["desc::pirateflag"] = "The flag of the Lumpy Pirates. The captain holds it near and dear to his heart.";
	["name::tinder"] = "Flame of Time";
	["desc::tinder"] = "Use to open the Eternal Tower. ";
	["name::redshoes"] = "Red Shoes";
	["desc::redshoes"] = "Red shoes given to Sam by Alva because John never thought to buy her any shoes.";
	["name::ValleyPearl"] = "Pearl of the Valley";
	["desc::ValleyPearl"] = "Rare and beautiful pearl. Guaranteed to get you the love you need.";
	["name::CasinoClubCard"] = "Coin Palace Membership Card";
	["desc::CasinoClubCard"] = "Only members can get inside New Dam City's hottest entertainment spot.";
	["name::EmotionChip"] = "Emotion Chip";
	["desc::EmotionChip"] = "Use to enhance a robot's emotions. Robots with this chip installed can even cry, though no one knows why.";
	["name::goldenfish"] = "Golden Valley Snapper";
	["desc::goldenfish"] = "Quake Valley's diamond in the rough. Favorite food of the Temblor Fish.";
	["name::LuckyCoin"] = "Lucky Coin";
	["desc::LuckyCoin"] = "Given to Daniel by his father.";
	["name::GlassApple"] = "Glazy Berries";
	["desc::GlassApple"] = "Red berries that glisten like jewels.";
	["name::SubwayTicket"] = "Subway Pass";
	["desc::SubwayTicket"] = "A gift from Mung. Allows you to ride the subway as many times as you like.";
	["name::DamCrab"] = "King Krab";
	["desc::DamCrab"] = "New Dam City's famous crab. Exquisite and delicious.";
	["name::QueenOutfit"] = "Beetle Queen Costume";
	["desc::QueenOutfit"] = "The Beetle Queen's costume. Increases the sex appeal of its wearer.";
	["name::TreasureDetector"] = "Treasure Radar";
	["desc::TreasureDetector"] = "Called the \"Treasure Hunter's Nose,\" it can find even the most hidden of treasures.";
	["name::DietPill"] = "Diet Pill";
	["desc::DietPill"] = "A mysterious diet pill from New Dam City's Lowtown. Those who know its ingredients would never take it.";
	["name::MinerContract"] = "Digger Contract";
	["desc::MinerContract"] = "Contract for Potcrock Isle's diggers. Unfair no matter how you look at it.";
	["name::PigYardHerdman"] = "Blimpig Ranch Seal of Approval";
	["desc::PigYardHerdman"] = "Received from Miller at the Blimpig Ranch. Proof of superior blimpig wrangling.";
	["name::ResearcherBadge"] = "Lab Assistant Badge";
	["desc::ResearcherBadge"] = "Given by Alva to her lab assistants. A symbol of prestige in the city.";
	["name::PerformanceContract"] = "Monkollywood Contract";
	["desc::PerformanceContract"] = "Official proof of performance in a Monkollywood production.";
	["name::EsterLogistics"] = "Ester City Logistics";
	["desc::EsterLogistics"] = "Launched by the Lumpy Pirates, this delivery company became the go-to service for delivering packages in Ester City.";
	["name::EsterPacks"] = "Package";
	["desc::EsterPacks"] = "A package that must be delivered \"today.\"";
	["name::CurryBento"] = "Curry Bento Box";
	["desc::CurryBento"] = "Alva's favorite curry.";
	["name::JohnnyBGoode"] = "\"Friends of Johnny\" Card";
	["desc::JohnnyBGoode"] = "Card for frequent customers of Johnny's Emporium. Offers discounts across all Johnny's Emporium branches.";
	["name::PonPon"] = "Prop Gun";
	["desc::PonPon"] = "A Monkollywood prop. Though lacking bullets, it can still hit \"enemies.\"";
	["name::SolomonKeyRed"] = "Solomon's Key (Courage)";
	["desc::SolomonKeyRed"] = "Solomon's key. No one knows what it's for.";
	["name::SolomonKeyBlue"] = "Solomon's Key (Strength)";
	["desc::SolomonKeyBlue"] = "Solomon's key. No one knows what it's for.";
	["name::SolomonKeyBlack"] = "Solmon's Key (Wisdom)";
	["desc::SolomonKeyBlack"] = "Solomon's key. No one knows what it's for.";
	["name::letter"] = "Mayor's Reference Letter";
	["desc::letter"] = "A hard-earned reference letter from the mayor. With it, Sam can go to school.";
	["name::memorycard"] = "Memory Card";
	["desc::memorycard"] = "A memory card for Earth Born. Necessary to play the game.";
	["name::CurryBento_01"] = "Curry Bento Box";
	["desc::CurryBento_01"] = "Alva's favorite curry. But it's cold now.";
	};
["CH1"]={
	};
["Name"]={
	["name::MayorA"] = "Mayor Hoffman";
	["name::Jasper"] = "Jasper";
	["name::FarmerA"] = "Chuck";
	["name::DiggerChage"] = "Chage";
	["name::FarmerB"] = "Hank";
	["name::FarmerC"] = "Dmir";
	["name::FarmerD"] = "Tanaka";
	["name::Grandis"] = "Grandis";
	["name::Hansey"] = "Hansey";
	["name::Sansey"] = "Sansey";
	["name::RobotBarman"] = "Cooking Terminal";
	["name::Boguta"] = "Boguta";
	["name::CaptainTiger"] = "Captain Tiger";
	["name::OldArthur"] = "Old Arthur";
	["name::Carota"] = "Carota";
	["name::Hunt"] = "Hunt";
	["name::StudengwithGlass"] = "Four-Eyes";
	["name::Daniel"] = "Daniel";
	["name::DeamonMask"] = "Demon Mask";
	["name::DiggerTutor"] = "Digguh";
	["name::FakeJohn"] = "Yohn";
	["name::Fengye"] = "Feng";
	["name::Park"] = "Park";
	["name::Muller"] = "Muller";
	["name::GraveKeeper"] = "Gravekeeper";
	["name::JanitorDon"] = "Janitor Don";
	["name::Mason"] = "Mason";
	["name::Miruku"] = "Miruku Miyazaki";
	["name::MomGlass"] = "Four-Eyes's Mom";
	["name::RocketHead"] = "Albert";
	["name::SandGearVendor"] = "Johnny";
	["name::SandGrocer"] = "Chang";
	["name::Tacoma"] = "Principal Tacoma";
	["name::TeacherReal"] = "Miss Real";
	["name::Yocar"] = "Yocar";
	["name::YocarRed"] = "Big Yocar";
	["name::Sam"] = "Sam";
	["name::John"] = "John";
	["name::npc_Sam"] = "Sam";
	["name::npc_John"] = "John";
	["name::SandTownBlock"] = "Brock";
	["name::SandNeighborA"] = "Catherine";
	["name::BaseballNan"] = "Baseball Nan";
	["name::Bob"] = "Bob";
	["name::Bowman"] = "Bowman";
	["name::Emily"] = "Emily";
	["name::Helen"] = "Helen";
	["name::Ingrid"] = "Ingrid";
	["name::Sara"] = "Sara";
	["name::Miller"] = "Miller";
	["name::MrsMiller"] = "Mrs. Miller";
	["name::Arne"] = "Arne";
	["name::Selma"] = "Selma";
	["name::Uva"] = "Uva";
	["name::Abliz"] = "Abliz";
	["name::MerchantB"] = "Masao Ayukawa";
	["name::KeroBot"] = "Tetsuo";
	["name::MerchantD"] = "Da Gama";
	["name::MerchantE"] = "Fruit Seller";
	["name::Oda"] = "Oda";
	["name::PoorC"] = "King";
	["name::PoorD"] = "Cletus";
	["name::Poorkid"] = "Bud";
	["name::Sawcoper"] = "Sawcopter";
	["name::WorkerA"] = "Gui Li";
	["name::JadeMa"] = "Jade";
	["name::Lili"] = "Lily";
	["name::MissBee"] = "Miss Bee";
	["name::Li"] = "Lee";
	["name::RobDaniel"] = "Daniel";
	["name::Solomon"] = "Solomon";
	["name::SolomonYoung"] = "Solomon";
	["name::SolomonOld"] = "Solomon";
	["name::William"] = "William";
	["name::BaoLi"] = "Little Bun";
	["name::CleanBot"] = "Cleaning Bot";
	["name::FakeMonk"] = "Master Airhead";
	["name::Ganma"] = "Ganma";
	["name::Jackma"] = "Jack";
	["name::LinLin"] = "Lin Lin";
	["name::MayorB"] = "Mr. Arimura";
	["name::RichA"] = "Ratson";
	["name::RichD"] = "Mrs. Sun";
	["name::Secretary"] = "Assistant Yasu";
	["name::Ballman"] = "Big Jaw";
	["name::BoardMan"] = "Mr. Board";
	["name::Drunk"] = "Drunken Master";
	["name::FangFang"] = "Fang";
	["name::Keroman"] = "Carpa";
	["name::KeroDealer"] = "Watta";
	["name::LandLady"] = "Lulu";
	["name::PoorE"] = "Lash";
	["name::Razorman"] = "Razor";
	["name::SlumKid"] = "Jackie";
	["name::UncleBear"] = "Ned";
	["name::Broken"] = "Ken";
	["name::Benjamin"] = "Benjamin";
	["name::BarSinger"] = "Sayuri";
	["name::BrainBot"] = "Classic Crooner";
	["name::CitizenA"] = "Jimmy";
	["name::CitizenB"] = "Mimi";
	["name::CitizenE"] = "Clive";
	["name::CitizenF"] = "Scarlett";
	["name::CitizenG"] = "Wang Hongbin";
	["name::CitizenH"] = "Wong";
	["name::DamKidA"] = "Jackson";
	["name::DamKidB"] = "Kentaro";
	["name::DamKidC"] = "Eric";
	["name::Daye"] = "Daye";
	["name::Huasheng"] = "Margolari Pittore";
	["name::LiuJiang"] = "Liu Jiang";
	["name::BeatleBaby"] = "Beetle Queen";
	["name::Cage"] = "Cage";
	["name::Davidson"] = "Davidson";
	["name::Irish"] = "O'Donnelly";
	["name::Joka"] = "Dorkus";
	["name::Juggler"] = "Malorkus";
	["name::Omar"] = "Omar";
	["name::ShineitaiA"] = "Earth Guardian";
	["name::ShineitaiB"] = "Wind Guardian";
	["name::ShineitaiC"] = "Fire Guardian";
	["name::MerchantC"] = "Chevis";
	["name::WorkerB"] = "Armstrong";
	["name::WorkerC"] = "Silva";
	["name::Joggerman"] = "Dwayne";
	["name::LabourRobA"] = "Tater";
	["name::LabourRobB"] = "Mung";
	["name::LabourRobC"] = "Sumas";
	["name::CitizenI"] = "Skinny";
	["name::CitizenD"] = "Tony";
	["name::Sasha"] = "Sasha";
	["name::PoorA"] = "Dr. Zhi";
	["name::Waiter"] = "Kurahachi";
	["name::CasinoManager"] = "Bucky";
	["name::LaoBan"] = "Yunosuke";
	["name::LaoBanNiang"] = "Mrs. Fumi";
	["name::BotBao"] = "Bot Bao";
	["name::ShaChou"] = "Tommo";
	["name::SushiMaster"] = "Su Shee";
	["name::PunkBot"] = "Johnny";
	["name::Micheal"] = "Mikey";
	["name::RitoBot"] = "Manager Rito";
	["name::OldMama"] = "Madame Tayama";
	["name::Huang"] = "Huang";
	["name::MantisBot"] = "Lightning Mac";
	["name::LadyLuna"] = "Lady Luna";
	["name::BroDamhill"] = "Dam Goon";
	["name::DamhillStoreOwner"] = "Miga";
	["name::Hindi"] = "Master Yogi";
	["name::RabbiAi"] = "Rabinna";
	["name::ConductorB"] = "Conductor";
	["name::Bebe"] = "Bella";
	["name::Jakoro"] = "Baleno";
	["name::Marutaro"] = "Rotondo";
	["name::Popiro"] = "Roccioso";
	["name::Roro"] = "Lupo";
	["name::Sumaro"] = "Arguto";
	["name::Zeniro"] = "Denaro";
	["name::Jetoro"] = "Biblio";
	["name::Purero"] = "Favoloso";
	["name::Hakoro"] = "Spazio";
	["name::Tafuro"] = "Robusto";
	["name::Muyaro"] = "Pompadoro";
	["name::Hanaken"] = "Hanaken";
	["name::Jidoro"] = "Producer Padrino";
	["name::Oriro"] = "Bandiero";
	["name::Robbutler"] = "Monkey Mother";
	["name::Fool_12"] = "Link";
	["name::Alva"] = "Alva";
	["name::Isabel"] = "Isabel";
	["name::Tomas"] = "Thomas";
	["name::BellyBaby"] = "Baby Belly";
	["name::Hart"] = "Hart";
	["name::Lada"] = "Ladah";
	["name::Smith"] = "Smith";
	["name::Ivan"] = "Ivan";
	["name::Nikita"] = "Nikita";
	["name::Patti"] = "Patty";
	["name::Veda"] = "Veda";
	["name::Baker"] = "Auto";
	["name::Gali"] = "Gali";
	["name::Ema"] = "Emma";
	["name::Bill"] = "Xin";
	["name::Ron"] = "Ron";
	["name::Raymond"] = "Raymond";
	["name::Lena"] = "Lena";
	["name::Gureev"] = "Gureev";
	["name::Nicky"] = "Nicky";
	["name::Gaye"] = "Guy";
	["name::Buchan"] = "Buchan";
	["name::Lawrence"] = "Lawrence";
	["name::MrsBrownie"] = "Mrs. Brownie";
	["name::Mika"] = "Mika";
	["name::Brownie"] = "Brownie";
	["name::Masao"] = "Masao";
	["name::Capsule"] = "Capsule";
	["name::StarWong"] = "Star";
	["name::Rocky"] = "Rocky";
	["name::MCK"] = "Token Exchange";
	["name::Floyd"] = "Floyd";
	["name::Lassie"] = "Lassie";
	["name::Dael"] = "Dael";
	["name::Rand"] = "Rand";
	["name::Carma"] = "Carma";
	["name::Ro"] = "Agu";
	["name::Lasse"] = "Russ";
	["name::Didier"] = "Didier";
	["name::Puff"] = "Puff";
	["name::Pavlove"] = "Pavlova";
	["name::Mojiji"] = "Mojiji";
	["name::CaptainPam"] = "Cap'n Pam";
	["name::Pim"] = "Pim";
	["name::Achi"] = "Achi";
	["name::Sipak"] = "Sipak";
	["name::Cain"] = "Cain";
	["name::Gary"] = "Johnny";
	["name::Wes"] = "Wes";
	["name::Noname_old"] = "???";
	["name::Noname_man"] = "???";
	["name::Noname_robot"] = "???";
	["name::Noname_woman"] = "???";
	["name::FakeSam"] = "???";
	["name::Fridge"] = "Fridge";
	["name::Fridge_mini"] = "Fridge";
	["name::Noname_Sam"] = "???";
	["name::Noname_Isabel"] = "???";
	["name::Noname_Alva"] = "???";
	["name::Noname_William"] = "???";
	["name::Noname_Daniel"] = "???";
	["name::Noname_Solomon"] = "???";
	["name::Ramo"] = "Ramo";
	["name::RabbiAitoSam"] = "Rabinna";
	["name::RabbiAitoJohn"] = "Rabinna";
	["name::Megaboy"] = "Sonic Punk";
	["name::HumanBreeder"] = "Breeder Bot";
	["name::HardBeard"] = "Captain Bristles";
	["name::Seaman"] = "Captain Seaman";
	["name::Noname_kid"] = "???";
	["name::Clerk"] = "Clerk";
	["name::BroDamhill_01"] = "Dam Goon";
	["name::BroDamhill_02"] = "Dam Goon";
	["name::BroDamhill_03"] = "Dam Goon";
	["name::BroDamhill_04"] = "Dam Goon";
	["name::BroDamhill_05"] = "Dam Goon";
	["name::BroDamhill_06"] = "Dam Goon";
	["name::BroDamhill_block"] = "Dam Goon";
	["name::Noname_monkey"] = "???";
	["name::MonkeyMayor"] = "Soprano";
	["name::MonkeyMayor_act"] = "Soprano";
	["name::Zeniro_act"] = "Denaro";
	["name::Muyaro_act"] = "Pompadoro";
	["name::Oriro_act"] = "Bandiero";
	["name::Jakoro_shooting"] = "Cameraman";
	["name::Jihanki"] = "Morning Glory";
	["name::Frog_npc"] = "Froggie Double";
	["name::PoorKid"] = "Bud";
	["name::Loser"] = "Ted";
	["name::Lvy"] = "Livy";
	["name::Noname_Jasper"] = "???";
	["name::Frog_npc_01"] = "Froggie Double";
	["name::Frog_npc_02"] = "Froggie Double";
	["name::Final_Sam"] = "Sam";
	["name::Megaboy_Alva"] = "Sonic Punk";
	["name::Popiro_act"] = "Roccioso";
	["name::Divine"] = "Fortune Teller";
	["name::Hillman"] = "Hillman";
	["name::Frank"] = "Frank";
	["name::Ramond"] = "Lamont";
	["name::TicketMachine"] = "Ticket Machine";
	["name::CarriageMonkey"] = "Monkey Legion";
	["name::RobbutlerProto"] = "Proto Breeder";
	["name::Brainman"] = "Brain";
	["name::Gamer"] = "Game Machine";
	["name::Johnny_final"] = "Final Johnny";
	["name::Gamer_01"] = "Game Machine";
	["name::CH_Fridge_Float"] = "Fridge";
	["name::Pavlova"] = "Pavlova";
	};
["CH1_Side"]={
	};
["CH_Fridge.sq"]={
	["cd273b281a3611eab5038c85907abf45"] = "If you were to get someone else's memory...\n{====}...would you be you? Or them?";
	["cd273f751a3611eaa6018c85907abf45"] = "Keep the current you here with me.\n{====}Then, if you fall in battle, you'll be able to start anew from here.";
	["cd2740971a3611eab4f68c85907abf45"] = "It took us so much effort to figure out a way to save our memories.\n{====}But what if those memories you save aren't the real you?";
	["cd2742e61a3611eab1858c85907abf45"] = "This here is a forest.\n{====}If you cut down a tree, it'll still be a forest.\n{====}But what if you cut down half the trees?\n{====}What if you only leave a single tree left?\n{====}When is a forest... no longer a forest?";
	["cd2743851a3611eaa97b8c85907abf45"] = "You're a cobweb stretched across time.\n{====}And memories get stuck in you, just like little bugs.\n{====}But every once in a while, one silently slips through...\n{====}And that, my friend, is why you forget things.";
	["cd2745511a3611ea85978c85907abf45"] = "{big}The wind may blow away the MIASMA, but it can't blow away the haze around your heart.";
	["cd2746871a3611eaa8cb8c85907abf45"] = "I've seen some movies before. Some were great. But most were awful.\n{====}I'm guessing the movies here constitute mostly the latter.";
	["cd2749c51a3611eab5448c85907abf45"] = "Must you really go this time? I'll miss you.\n{====}{box_size:big}In the coming days, I'll be like a particle, a wave, traveling across the universe.\n{====}The universe called John.";
	["cd274a661a3611eaa3a58c85907abf45"] = "Those secrets you keep ought to thank you.\n{====}Secrets are only secrets because you know them.";
	["cd274ba31a3611eaa5db8c85907abf45"] = "Wanna save your game?\nI can do that for you. But ...{,,}\n{====}...you know, I'm still warming up.";
	["cd274c781a3611eaac498c85907abf45"] = "{signal:open}Save your memories?\n{choice:yes}Save\n{choice:no}Cancel";
	["666538b8f80911eaac1b3c15c2dd513c"] = "You place things in the fridge in hopes that they'll stay good forever.\n{====}{big}But the next time you open the fridge, they may have already gone bad.";
	["666539eef80911eaac1b3c15c2dd513c"] = "As you already know, I'm an expert at storing memories.\n{====}But when it comes to memories themselves, I know very little.";
	["66653b60f80911eaac1b3c15c2dd513c"] = "Sometimes memories develop problems.\n{====}When this happened to people in the past...\n{====}...they'd try blowing in the slot or rubbing it with an eraser.";
	["66653becf80911eaac1b3c15c2dd513c"] = "You've gotten stronger.\n{====}But getting stronger isn't your goal, is it?";
	["66653c5af80911eaac1b3c15c2dd513c"] = "This feeling of being underground—it's familiar, yes?\n{====}The murky air. The cramped spaces.\n{====}{big}Intuition and experience are one's only guiding light on an adventure.";
	["66653eb2f80911eaac1b3c15c2dd513c"] = "I've seen a few crazy memories in my time.\n{====}Believe me. Some people? Have crazy abilities.";
	["66653facf80911eaac1b3c15c2dd513c"] = "Aside from that ubiquitous banana milk...\n{====}...monkeys' memories aren't that different from humans'.";
	["66654092f80911eaac1b3c15c2dd513c"] = "Full of things you thought would last forever...\n{====}...but are gone within an hour of dinner.";
	["666540e2f80911eaac1b3c15c2dd513c"] = "People are a lot more keen on remembering the times they won money.\n{====}{big}But when they lose money? They just hang their heads and walk away.";
	["66654150f80911eaac1b3c15c2dd513c"] = "{big}Those monsters. Those miserable things walking the streets, I mean.\n{====}They come here often.\n{====}Looking upon me with those sorrowful, vacuous eyes...\n{====}...without saying a word.";
	["66654196f80911eaac1b3c15c2dd513c"] = "The people around here are quite poor.\n{====}So poor, in fact, that they don't even have anything for me to keep.\n{====}{big}So you don't have to worry about your memories being mixed up with anything weird.";
	["15df0ca82ca111eb801b3c15c2dd513c"] = "Quite the strange place, wouldn't you agree?\n{====}Some people enjoy collecting machines.\n{====}Naturally, machines, too, will also collect people.";
	["bf9d7d00654611eb85da3c15c2dd513c"] = "{big}Every once in a while, we run into something that seems strangely familiar.\n{====}Don't question it. There's definitely meaning behind it.";
	["92f4a3ce889011ebb8f93c15c2dd513c"] = "Not all reunions are a happy affair.\n{====}But turn back now, and there may not be an opportunity for a reunion at all.";
	};
["quest_CH8"]={
	["text::Seeding"] = "Charon";
	["text::Sam"] = "Sam. Save Sam.";
	["text::FinalRound"] = "Let's go! This is the final battle. Let's finish this!";
	["text::SeedingTrain"] = "Sam. Save Sam.";
	};
["CH_Bed.sq"]={
	["666504baf80911eaac1b3c15c2dd513c"] = "Rest?\n{choice:yes}Yes\n{choice:no}No";
	};
["CollectionItemName"]={
	["name::gasha_eye"] = "Googly Bat";
	["desc::gasha_eye"] = "The very first Pixball.\nOriginally a prototype for a children's toy, it became so popular that it was added to the game.";
	["name::gasha_goblin"] = "Goblin";
	["desc::gasha_goblin"] = "A greedy trickster that's not only cowardly but weak.\nIt's a miracle that it was even captured within a Pixball at all.";
	["name::gasha_magea"] = "Evil Mage";
	["desc::gasha_magea"] = "An enigmatic fellow. Looking at him makes you feel as though you're being sucked into a void.\nAnother city was swallowed by the MIASMA. Luckily, Ester City is safe.";
	["name::gasha_flame"] = "Fire Fairy";
	["desc::gasha_flame"] = "Easily angered, this fairy with hair of fire is hot, hot, hot!\nI wanted to create some cute monsters that children would enjoy.";
	["name::gasha_mushroom"] = "Mushroom";
	["desc::gasha_mushroom"] = "Legend has it you can find creatures like these in the Land of the Wind.\nIt's snowing now. And in summer, too. Perhaps a result of the MIASMA?";
	["name::gasha_mummy"] = "Mummy";
	["desc::gasha_mummy"] = "Watch out for monsters in the sand.\nThere's some weird experiments going on in the Eternal Tower. Some even claim to have seen creatures wrapped in bandages.";
	["name::gasha_worm"] = "Dune Worm";
	["desc::gasha_worm"] = "Its cute countenance has made it a target for bullies among the monsters.\nMaybe I should go out for a walk. Lost the spark to create more monsters.";
	["name::gasha_slime"] = "Slime";
	["desc::gasha_slime"] = "You don't wanna know the type of stuff this guy's eaten.\nUsed up all the chips in the repair shop, so I can finally take a break and work on Earth Born.";
	["name::gasha_batvulture"] = "Bat Vulture";
	["desc::gasha_batvulture"] = "A proud bird that won't eat anything that could potentially affect its color.\nWhen I was a kid, everyone used to put flamingos outside their houses as decorations.";
	["name::gasha_stone"] = "Crystal Jaw";
	["desc::gasha_stone"] = "Strong enough to chew rocks.\nA strange group of old fogeys docked today. Call themselves pirates, but I kinda like them. They've been telling me all kinds of stories about the outside.";
	["name::gasha_boar"] = "Wild Boar";
	["desc::gasha_boar"] = "A fierce but flavorful pig.\nPrices surging lately. Might ride the rails outta here. But don't know where I'd go...";
	["name::gasha_devila"] = "Venom Bane";
	["desc::gasha_devila"] = "The brains of the Demon King and the leader of the Four Generals.\nThe Four Generals carry energy crystals that are the key to saving the princess.";
	["name::gasha_darkknigt"] = "Dark Knight";
	["desc::gasha_darkknigt"] = "The quiet, quiet guard of Demon King City, he's unable to understand the language of monsters.\nWorking at the repair shop is nothing but a monotonous slog. My only joy comes in creating these monsters.";
	["name::gasha_fatdragon"] = "Fat Dragon";
	["desc::gasha_fatdragon"] = "A voracious dragon occupying a desolate peak, he consumes everything he sees.\nThough I didn't have any plans to make a sequel, I did release an expansion pack to appease players.";
	["name::gasha_skeletondragon"] = "Bone Dragon";
	["desc::gasha_skeletondragon"] = "A giant, ancient dragon buried beneath the sand at the farthest reaches of the desert.\nA new Pixball for you to take on greater dangers.";
	["name::gasha_seadragon"] = "Sea Dragon";
	["desc::gasha_seadragon"] = "This young dragon from the swamp is wise beyond its years.\nGreater dangers will net you greater rewards.";
	["name::gasha_long"] = "Azure Dragon";
	["desc::gasha_long"] = "This elusory being is the ancient guardian of the snowy mountain.\nThe rarer the Pixball, the better the results.";
	["name::gasha_devilkinga"] = "Demon King";
	["desc::gasha_devilkinga"] = "The Demon King resides on high in his castle, just like that Solomon.\nThere's been more and more MIASMA lately. Can't help but think even Ester City's not safe anymore.";
	["name::gasha_devilkingb"] = "True Demon King";
	["desc::gasha_devilkingb"] = "The Demon King's final form.\nThe experiment starts tomorrow. Luckily, with a bit of crunch, I was able to finish this game first.";
	["name::gasha_samuraip"] = "Pixel King";
	["desc::gasha_samuraip"] = "The ultimate Pixball. So powerful, it can turn the tide of battle in an instant.\nI got the idea for this one from the gulls down at the harbor. May it fly far, far away from this cursed city... where I couldn't.";
	["detail::gasha_eye"] = "The very first Pixball.\nOriginally a prototype for a children's toy, it became so popular that it was added to the game.";
	["detail::gasha_goblin"] = "A greedy trickster that's not only cowardly but weak.\nIt's a miracle that it was even captured within a Pixball at all.";
	["detail::gasha_magea"] = "An enigmatic fellow. Looking at him makes you feel as though you're being sucked into a void.\nAnother city was swallowed by the MIASMA. Luckily, Ester City is safe.";
	["detail::gasha_flame"] = "Easily angered, this fairy with hair of fire is hot, hot, hot!\nI wanted to create some cute monsters that children would enjoy.";
	["detail::gasha_mushroom"] = "Legend has it you can find creatures like these in the Land of the Wind.\nIt's snowing now. And in summer, too. Perhaps a result of the MIASMA?";
	["detail::gasha_mummy"] = "Watch out for monsters in the sand.\nThere's some weird experiments going on in the Eternal Tower. Some even claim to have seen creatures wrapped in bandages.";
	["detail::gasha_worm"] = "Its cute countenance has made it a target for bullies among the monsters.\nMaybe I should go out for a walk. Lost the spark to create more monsters.";
	["detail::gasha_slime"] = "You don't wanna know the type of stuff this guy's eaten.\nUsed up all the chips in the repair shop, so I can finally take a break and work on Earth Born.";
	["detail::gasha_batvulture"] = "A proud bird that won't eat anything that could potentially affect its color.\nWhen I was a kid, everyone used to put flamingos outside their houses as decorations.";
	["detail::gasha_stone"] = "Strong enough to chew rocks.\nA strange group of old fogeys docked today. Call themselves pirates, but I kinda like them. They've been telling me all kinds of stories about the outside.";
	["detail::gasha_boar"] = "A fierce but flavorful pig.\nPrices surging lately. Might ride the rails outta here. But don't know where I'd go...";
	["detail::gasha_devila"] = "The brains of the Demon King and the leader of the Four Generals.\nThe Four Generals carry energy crystals that are the key to saving the princess.";
	["detail::gasha_darkknigt"] = "The quiet, quiet guard of Demon King City, he's unable to understand the language of monsters.\nWorking at the repair shop is nothing but a monotonous slog. My only joy comes in creating these monsters.";
	["detail::gasha_fatdragon"] = "A voracious dragon occupying a desolate peak, he consumes everything he sees.\nThough I didn't have any plans to make a sequel, I did release an expansion pack to appease players.";
	["detail::gasha_skeletondragon"] = "A giant, ancient dragon buried beneath the sand at the farthest reaches of the desert.\nA new Pixball for you to take on greater dangers.";
	["detail::gasha_seadragon"] = "This young dragon from the swamp is wise beyond its years.\nGreater dangers will net you greater rewards.";
	["detail::gasha_long"] = "This elusory being is the ancient guardian of the snowy mountain.\nThe rarer the Pixball, the better the results.";
	["detail::gasha_devilkinga"] = "The Demon King resides on high in his castle, just like that Solomon.\nThere's been more and more MIASMA lately. Can't help but think even Ester City's not safe anymore.";
	["detail::gasha_devilkingb"] = "The Demon King's final form.\nThe experiment starts tomorrow. Luckily, with a bit of crunch, I was able to finish this game first.";
	["detail::gasha_samuraip"] = "The ultimate Pixball. So powerful, it can turn the tide of battle in an instant.\nI got the idea for this one from the gulls down at the harbor. May it fly far, far away from this cursed city... where I couldn't.";
	["name::gasha_rat"] = "Mad Rat";
	["desc::gasha_rat"] = "A fierce, nimble beast.\nThe shop has been overrun with rats lately. To the point where the cables are starting to suffer.";
	["detail::gasha_rat"] = "A fierce, nimble beast.\nThe shop has been overrun with rats lately. To the point where the cables are starting to suffer.";
	};
["CH_FloatFridge.sq"]={
	["bf9c42d2654611eb85da3c15c2dd513c"] = "Quite the strange place, wouldn't you agree?\n{====}Some people enjoy collecting machines.\n{====}Naturally, machines, too, will also collect people.";
	["bf9c45f2654611eb85da3c15c2dd513c"] = "{signal:open}Save your memories?\n{choice:yes}Save\n{choice:no}Cancel";
	};
["StoreFoodName"]={
	["name::gel"] = "Energy Drink";
	["detail::gel"] = "Weird color. Top-rate effectiveness.";
	["name::pancake"] = "Pancakes";
	["detail::pancake"] = "The rich maple syrup transforms the light flavor of these fluffy cakes like magic.";
	["name::coffee"] = "Coffee";
	["detail::coffee"] = "Despite its enticing smell, not all can take its bitter flavor.";
	["name::hotdog"] = "Hot Dog";
	["detail::hotdog"] = "Common street food.";
	["name::doughnut"] = "Donut";
	["detail::doughnut"] = "Potcrock Isle's finest love these rings of sugar.";
	["name::pottage"] = "Pottage";
	["detail::pottage"] = "Seeing all these fresh veggies simmering in this succulent soup is enough to make anyone drool.";
	["name::eisbein"] = "Eisbein";
	["detail::eisbein"] = "A grandiose feast!";
	["name::ratatouille"] = "Ratatouille";
	["detail::ratatouille"] = "Brightly colored and richly flavored, this dish is perfect for summer.";
	["name::book_bubbleTea"] = "Bubble Tea";
	["detail::book_bubbleTea"] = "The newest craze in New Dam City, this milky treat is loved by teenage girls.";
	["name::naan"] = "Naan";
	["detail::naan"] = "Easy to carry, this tasty staple is great for a rainy day.";
	["name::chinese_hamburger"] = "Chinese Burger";
	["detail::chinese_hamburger"] = "An old-timey recipe, these simple, flavorful buns of meat never get old.";
	["name::pho"] = "Pho";
	["detail::pho"] = "Packed with perfection.";
	["name::ice_cream"] = "Ice Cream";
	["detail::ice_cream"] = "Kids have a second stomach when it comes to eating ice cream.";
	["name::pudding"] = "Pudding";
	["detail::pudding"] = "Dangerously sweet, it's been known to cause any number of family arguments.";
	["name::plum_jam"] = "Glazy Berry Jam";
	["detail::plum_jam"] = "Once a favorite of New Dam City's denizens, it's not so common anymore.";
	["name::apple_jam"] = "Fake Glazy Berry Jam";
	["detail::apple_jam"] = "Though the packaging may have you fooled, this is just normal jam.";
	["name::rice_roll"] = "Onigiri";
	["detail::rice_roll"] = "Passion (and a little hand heat) add to the flavor of this ball of rice.";
	["name::dam_sushi"] = "Dam Sushi";
	["detail::dam_sushi"] = "The signature sushi of the boss at New Dam City's Jazz 21.";
	["name::strawberry_milk"] = "Strawberry Milk";
	["detail::strawberry_milk"] = "The cute packaging and color make it hard to believe that this is Isabel's favorite drink.";
	["name::banana_milk"] = "Banana Milk";
	["detail::banana_milk"] = "A Monkollywood specialty. No monkey can refuse its allure.";
	["name::choco_banana"] = "Choco Banana";
	["detail::choco_banana"] = "Monkeys' love for bananas extends to all foods made from bananas.";
	["name::frog_cookies"] = "Frog Cookie";
	["detail::frog_cookies"] = "A cute frog-shaped cookie. Kids love it.";
	["name::braised_meat"] = "Braised Pork";
	["detail::braised_meat"] = "Full of power!";
	["name::pickle"] = "Pickle";
	["detail::pickle"] = "A crispy, refreshing snack.";
	["name::puff"] = "Puff";
	["detail::puff"] = "A delicate and delicious treat.";
	["name::pavlova_cake"] = "Pavlova Cake";
	["detail::pavlova_cake"] = "A luxurious cake well worth its price.";
	["name::black_bread"] = "Dalieba";
	["detail::black_bread"] = "A sturdy foodstuff that can be used as building material.";
	["name::toast"] = "Toast";
	["detail::toast"] = "A cheap and tasty treat that's perfect for those on the go.";
	["name::beer"] = "Beer";
	["detail::beer"] = "John starts to smell if he drinks too much.";
	["name::vodka"] = "Vodka";
	["detail::vodka"] = "One drink and you'll forget all about the freezing cold.";
	["name::sake"] = "Sake";
	["detail::sake"] = "A simple, unembellished drink.";
	["name::sex_beach"] = "Sex on the Beach";
	["detail::sex_beach"] = "Alva's favorite alcoholic drink.";
	["name::wine"] = "Sweet Lightning";
	["detail::wine"] = "Lightning Mac's signature drink. It's electrifying!";
	["name::grape_juice"] = "Lightning Bug";
	["detail::grape_juice"] = "An alcohol-free version of Lightning Mac's signature drink. For the kids.";
	};
["IngredientName"]={
	["name::cheese"] = "Cheese";
	["desc::cheese"] = "The delicious taste of wind-dried milk.";
	["detail::cheese"] = "Thick and creamy and oh-so-good.";
	["name::milk"] = "Milk";
	["desc::milk"] = "Fresh milk.";
	["detail::milk"] = "From a milk-producing animal, but you don't know which one.";
	["name::egg"] = "Egg";
	["desc::egg"] = "An egg.";
	["detail::egg"] = "A nice egg for this trying time.";
	["name::ham"] = "Ham";
	["desc::ham"] = "Ham that's been cured.";
	["detail::ham"] = "Curing makes everything better.";
	["name::bacon"] = "Pork Belly";
	["desc::bacon"] = "The other white meat.";
	["detail::bacon"] = "Meat-to-fat ratio perfection.";
	["name::chicken"] = "Chicken";
	["desc::chicken"] = "Meat from a chicken.";
	["detail::chicken"] = "Buck buck buck-CAW!";
	["name::rib"] = "Ribs";
	["desc::rib"] = "Fresh ribs.";
	["detail::rib"] = "Can't be used to create a woman.";
	["name::shellfish"] = "Clam";
	["desc::shellfish"] = "Tasty seafood.";
	["detail::shellfish"] = "You can use the shell as an accessory after eating it.";
	["name::octopus"] = "Octopus";
	["desc::octopus"] = "Nightmare cephalopod.";
	["detail::octopus"] = "Some people say octopuses can predict the future. Others just eat them.";
	["name::lobster"] = "Crab";
	["desc::lobster"] = "Pincered provisions.";
	["detail::lobster"] = "Spend thirty minutes cracking shells for one bite of meat.";
	["name::fish"] = "Fish";
	["desc::fish"] = "It's a fish.";
	["detail::fish"] = "New Dam City's most common ingredient. Basic but good.";
	["name::carrot"] = "Carrot";
	["desc::carrot"] = "The common carrot.";
	["detail::carrot"] = "The orange jewel of the earth. Great for giving your skin that orange sheen.";
	["name::radish"] = "Daikon";
	["desc::radish"] = "A big white carrot.";
	["detail::radish"] = "Legend has it, the daikon are carrots that a vampire rabbit sucked the color out of.";
	["name::lettuce"] = "Lettuce";
	["desc::lettuce"] = "Leafy greens.";
	["detail::lettuce"] = "Though surprisingly expensive, it makes a great salad.";
	["name::mushroom"] = "Mushroom";
	["desc::mushroom"] = "A common mushroom.";
	["detail::mushroom"] = "Watch out for the poisonous ones.";
	["name::tomato"] = "Tomato";
	["desc::tomato"] = "Juicy and red.";
	["detail::tomato"] = "Is it a fruit? Is it a vegetable? We'll never know.";
	["name::pumpkin"] = "Pumpkin";
	["desc::pumpkin"] = "Great for carving.";
	["detail::pumpkin"] = "Sweet and delicious, pumpkins make the best pies, and don't let anyone tell you otherwise.";
	["name::eggplant"] = "Eggplant";
	["desc::eggplant"] = "A purple delicacy.";
	["detail::eggplant"] = "Did you know eggplants used to be white?";
	["name::onion"] = "Onion";
	["desc::onion"] = "You'll cry it's so good.";
	["detail::onion"] = "One of THE most essential cooking ingredients. Gives your dish that necessary kick.";
	["name::potato"] = "Potato";
	["desc::potato"] = "The apple of the earth.";
	["detail::potato"] = "You can boil them, mash them, or even stick them in a stew.";
	["name::sandfruit"] = "Sandrupe";
	["desc::sandfruit"] = "A drupe from a coop.";
	["detail::sandfruit"] = "Potcrock Isle's famous fruit. Started out as an apple that evolved in Potcrock's unique soil.";
	["name::apple"] = "Apple";
	["desc::apple"] = "Red and delicious.";
	["detail::apple"] = "You are the apple of my eye.";
	["name::cherry"] = "Cherry";
	["desc::cherry"] = "Sweet, then sour.";
	["detail::cherry"] = "Cherry-pickin' good.";
	["name::lemon"] = "Lemon";
	["desc::lemon"] = "Sour!";
	["detail::lemon"] = "Sour enough to knock your socks off.";
	["name::spicy_power"] = "Lava Candy";
	["desc::spicy_power"] = "Sweeten up your life.";
	["detail::spicy_power"] = "Sweet, sweet, SWEET! Melt to create your own miniature volcano.";
	["name::spicy_speed"] = "Electric Chili Sauce";
	["name::spicy_efficiency"] = "Fire Mint";
	["name::spicy_defense"] = "Steam Peppercorn";
	["desc::spicy_speed"] = "So hot, it's electric.";
	["detail::spicy_speed"] = "Surprisingly hectic! Feel the heat through your every pore.";
	["desc::spicy_efficiency"] = "Is it cold? Is it hot?";
	["detail::spicy_efficiency"] = "So hot, they're cool. Blow blue fire with these spicy leaves.";
	["desc::spicy_defense"] = "Steamy kernel of spice.";
	["detail::spicy_defense"] = "Phenomenal cosmic spice. Itty bitty kernel. Crack to release steam.";
	["name::long_xia"] = "Lobster";
	["desc::long_xia"] = "Good and cheap.";
	["detail::long_xia"] = "Used to be an expensive luxury, but now that you can find them everywhere, their price has plummeted.";
	["name::chinese_cabbage"] = "Napa Cabbage";
	["desc::chinese_cabbage"] = "Packed to the leaves with moisture.";
	["detail::chinese_cabbage"] = "The perfect accompaniment to every dish.";
	["name::pineapple"] = "Pineapple";
	["desc::pineapple"] = "Tasty tropical fruit.";
	["detail::pineapple"] = "Makes any dish radiant with the essence of summer.";
	["name::tofu"] = "Tofu";
	["desc::tofu"] = "So soft. So jiggly.";
	["detail::tofu"] = "Though unmemorable on its own, it can up the ante on any dish.";
	};
["quest_CH5"]={
	["text::AfterMiasma"] = "The Aftermath";
	["text::Bazar"] = "The MIASMA may have left, but the monsters remain. Someone's trapped in Lowtown.";
	["text::Sam"] = "How could I have let myself sleep this long?! John's already left! He probably needs my help.";
	["text::BottomTown"] = "Those two brothers have gotten themselves in trouble again. This time, they're trapped inside the dam.";
	["text::AfterMiasmaFinish"] = "That person said all of this is my fault. I beat them, but then nothing changed. And now Alva and Isabel are gone, too...";
	};
["StoreName"]={
	["name::Gear_SandTown"] = "Johnny's Emporium";
	["name::Gear_Greenberg"] = "Johnny's Emporium";
	["name::Gear_Damhill"] = "Johnny's Emporium";
	["name::Gear_Ester"] = "Johnny's Emporium";
	["name::Store_SandTown"] = "Hello Grocery";
	["name::Store_Greenberg"] = "K.K. Dog's";
	["name::Store_Damhill"] = "The Friendly Spendie";
	["name::Store_Ester"] = "DogBee Grocery";
	["name::Yamada_Damhill"] = "Tayamaya";
	["name::Vmachine_Train"] = "Sis. Jonny";
	["name::Store_Demo_Abliz"] = "Abori Sakana";
	["name::Store_Demo_MerchantB"] = "Taro Sakana";
	["name::Store_Demo_MerchantD"] = "Da Gama Spicy";
	["name::Store_Demo_MerchantE"] = "Fruit & Veg";
	["name::Store_Demo_PoorE"] = "Lash's Bento";
	["name::Gear_Monkey"] = "Morning Glory's";
	["name::Store_Abliz"] = "Abliz";
	["name::Store_Dam_Crab"] = "The King Krab";
	["name::Store_Dam_Crab02"] = "The King Krab";
	["name::Store_DamJazz21"] = "Jazz 21";
	["name::Store_MerchantB"] = "Masao Ayukawa";
	["name::Store_MerchantD"] = "Da Gama";
	["name::Store_MerchantE"] = "Dragon Produce";
	["name::Store_Monkey_Fool12"] = "Banana Milk";
	["name::Store_Sawcoper"] = "Sawcopter Snacks";
	["name::William_Jam"] = "William Trading Co.";
	["name::Store_Baker"] = "Mama Bread";
	["name::Store_Tayama"] = "Tayama's";
	["name::Store_SandTown_lite"] = "Hello Grocery";
	["name::Store_DamJazz21_sam"] = "Jazz 21";
	["name::Store_Coin"] = "Token Exchange";
	["name::Store_SeedingTrain"] = "The Final Johnny's";
	["name::Gear_SandTown_lite"] = "Johnny's Emporium";
	["name::Store_MantisBot"] = "Lightning Mac's";
	["name::Store_MantisBot_lite"] = "Lightning Mac's";
	};
["quest_CH1"]={
	["text::Tour"] = "A Digger's Life";
	["text::TourTown"] = "Hurry to the dig site. If you're late, your pay will be docked...";
	["text::TourMine"] = "Save the dig site from the slug attack.";
	["text::AfterCount"] = "Ask Mason at the Sunnyside Ranch to fix John's pan. Otherwise, you won't be able to make dinner.";
	["text::PanFixed"] = "The pan is fixed—and stronger, too! But first? Dinner.";
	["text::Bully"] = "School Days";
	["text::BullySchool"] = "Today's my first day of school. Let's hurry so I'm not late.";
	["text::BullyMayor"] = "I need a reference letter from the mayor so I can go to school.";
	["text::BullyDaniel"] = "Thanks to Chuck, we got the reference letter. Back to school then!";
	["text::BullyKillTime"] = "There's still a long time before school gets out. Go kill some time around town.";
	["text::BullyOffSchool"] = "Looks like Sam's gotten into some trouble at school.";
	["text::BullyCave"] = "Daniel's fallen into the tunnel beneath the school.";
	["text::DinnerTalk"] = "Another exciting day! Head back and make dinner for those growling tums.";
	["text::SchoolDays"] = "The Forbidden Land";
	["text::SDMorning"] = "It's open house at the school today, which means John can go, too.";
	["text::SDMall"] = "Sam's run into the Forbidden Land! Find her before something terrible happens.";
	["text::SDAfterTheHand"] = "Hurry! Find the exit! Go, Sam! Go!";
	["text::Medicine"] = "A Gel for John";
	["text::Medicine0"] = "Quick! Find the gel for John!";
	["text::Medicine1"] = "Hurry home. John needs that gel—and fast!";
	["text::JailStory"] = "Prison Break";
	["text::Crypt"] = "One cave after another. Maybe this is our chance to escape!";
	["text::TourFinish"] = "Dangerous work, fierce battles, and meager pay—this is just one day in John's life as a digger. There is, however, occasional good news. For instance, tomorrow, Sam gets to start school.";
	["text::BullyFinish"] = "The first day of school went off without a hitch. We even saved Daniel from the tunnel under the school! It almost reminded me... of when John first found me. I hope Daniel and I can be friends after this.";
	["text::SchoolFinish"] = "Sam caused a big commotion during open house at school. John managed to find her in the Forbidden Land, but not before being injured by one of the monsters there. Even worse? That nasty mayor threw us in jail!";
	["text::JailFinish"] = "We may have escaped the jail, but we couldn't escape the mayor's judgment. Luckily, Charon didn't turn out to be nearly as scary as the mayor made it out to be. It took us away from Potcrock Isle, and now our adventure on the surface has begun.";
	};
["CuisineName"]={
	["detail::slug_sashimi"] = "我能感受到这道食物的伤感。\n水晶鳗鱼啊，其实是鳗鱼的幼崽。\n虽然我知道获得这样的食材肯定是经历艰难的过场，\n但是以这样的心境，我实在是没法说出“好吃”。";
	["name::vegetable_fry"] = "Vegetable Stir-Fry";
	["desc::vegetable_fry"] = "A simple vegetable dish.";
	["detail::vegetable_fry"] = "It doesn't get much better than a plate of steaming-hot vegetables.";
	["name::fish_sandwich"] = "Fish Sandwich";
	["desc::fish_sandwich"] = "When fish is in a sandwich, you can eat fish anytime.";
	["detail::fish_sandwich"] = "Cooking is optional.";
	["name::salad_fruit"] = "Fruit Salad";
	["desc::salad_fruit"] = "A delightful mixture of veggies and fruit.";
	["detail::salad_fruit"] = "Nutrient-packed combo. Not very filling, though.";
	["name::seafood_grill"] = "Seafood Skewers";
	["desc::seafood_grill"] = "Skewered food is best.";
	["detail::seafood_grill"] = "Feel like a wild animal when you tear into these skewers of the deep.";
	["name::fruit_pie"] = "Fruit Pie";
	["desc::fruit_pie"] = "Just like mom used to make.";
	["detail::fruit_pie"] = "The flaky crust. The succulent fruit. It just don't get no better than this.";
	["name::fish_soup"] = "Damhill Fish Soup";
	["desc::fish_soup"] = "Drink it and warm you up.";
	["detail::fish_soup"] = "One of the fish meals invented by the Damhill locals.";
	["Recipe::vegetable_fry"] = "Take a vegetable, throw it in a pan. Take another vegetable, throw it in the pan, too. Repeat until satisfied.";
	["name::meat_stew"] = "Pork Chop";
	["desc::meat_stew"] = "A chop o' the pork.";
	["detail::meat_stew"] = "Are you the pork chops and veg type or the pork chops and applesauce type?";
	["Recipe::meat_stew"] = "Fry a big ol' slab 'a pork till golden brown and garnish with your favorite side.";
	["Recipe::fish_sandwich"] = "Slap a fish between two slices of bread and pop 'er in your mouth.";
	["name::salad_sea"] = "Steamed Fish";
	["desc::salad_sea"] = "This fish is steaming mad!";
	["detail::salad_sea"] = "Foodies of New Dam City love this dish. The fish takes the flavor of the fruit. The fruit takes the flavor of the fish!";
	["Recipe::salad_sea"] = "Stuff a fish with your favorite fruit and throw it in a steamer. Watch the heat!";
	["Recipe::salad_fruit"] = "Slice and dice your favorite fruit and veg and toss 'em in a bowl. The soul is in the dressing!";
	["name::salad_mix"] = "Veggie Egg Stir-Fry";
	["desc::salad_mix"] = "An egg a day is A-ok.";
	["detail::salad_mix"] = "Mix up the type of veg for a culinary smorgasbord of possibilities.";
	["Recipe::salad_mix"] = "Whether you should fry the eggs or the vegetables first is a long-standing controversy.";
	["name::hotpot"] = "Hot Pot";
	["desc::hotpot"] = "Sheer deliciousness in a pot.";
	["detail::hotpot"] = "Once you start, you just can't stop.";
	["Recipe::hotpot"] = "A good soup base can make anything taste great. It's all about that base!";
	["name::gulaorou"] = "Sweet and Sour Pork";
	["desc::gulaorou"] = "A sweet meat delicacy.";
	["detail::gulaorou"] = "Only the sweetest sweet tooth can handle its cloying flavor.";
	["Recipe::gulaorou"] = "Fry the meat, then toss in the fruit. Simmer until sauce thickens.";
	["name::steak"] = "Red Braised Pork Belly";
	["desc::steak"] = "As red as candy.";
	["detail::steak"] = "A complicated dish the likes of which only accomplished chefs like John can master.";
	["Recipe::steak"] = "Quality meat and a perfect temperature are key.";
	["name::coconutbroth"] = "Fruity Meat Stew";
	["desc::coconutbroth"] = "Fruit and meat never tasted so good.";
	["detail::coconutbroth"] = "A heaping helping of fruit gives this meat its exquisite sweetness.";
	["Recipe::coconutbroth"] = "Toss meat, fruit, and sauce into a pot and slow-cook to perfection.";
	["name::zongzi"] = "Meat Zongzi";
	["desc::zongzi"] = "Delicious and filling.";
	["detail::zongzi"] = "Sam loves the yolk-and-meat-filled ones.";
	["Recipe::zongzi"] = "Digging through the sticky sweet rice is like hunting for buried treasure.";
	["name::fruitrice"] = "Drupe-Fried Rice";
	["desc::fruitrice"] = "Fried rice for the masses.";
	["detail::fruitrice"] = "You'll never forget the first time you bit \ndown on a giant piece of \nsandrupe in this fruity concoction.";
	["Recipe::fruitrice"] = "Serve in the leftover sandrupe shell for the ultimate in presentation and flavor.";
	["name::seafoodramen"] = "Seafood Ramen";
	["desc::seafoodramen"] = "Ramen is better with seafood.";
	["detail::seafoodramen"] = "Simple yet rich. A great dish for impressing your friends.";
	["Recipe::seafoodramen"] = "Slow and steady wins the race when it comes to cooking the broth for this noodle soup.";
	["name::coldnoodles"] = "Cold Noodles";
	["desc::coldnoodles"] = "The perfect meal for a hot day.";
	["detail::coldnoodles"] = "Banish the summer heat in an instant with the tangy cool blast from these flavorful flour tubes.";
	["Recipe::coldnoodles"] = "Add fruit and ice and you could almost be eating ice cream.";
	["name::jiaozi"] = "Dumplings";
	["desc::jiaozi"] = "Little pouches of sheer delight.";
	["detail::jiaozi"] = "Packed with love, dumplings bring families together.";
	["Recipe::jiaozi"] = "Stuff wraps with tasty fillings and fry, steam, or boil to perfection.";
	["name::oyakodon"] = "Oyakodon";
	["desc::oyakodon"] = "A simple egg-and-chicken dish.";
	["detail::oyakodon"] = "Sure to keep you full long after the dinner plates have been cleaned up.";
	["Recipe::oyakodon"] = "Fry chicken with soy sauce and sugar and mix in egg. Top with scallions for extra zing.";
	["name::sushi"] = "Sushi Platter";
	["desc::sushi"] = "Nobody can resist the allure of raw fish.";
	["detail::sushi"] = "The possibilities are endless when it comes to fish and rice.";
	["Recipe::sushi"] = "Slice up some fish and top on rice. Or just roll the whole thing up!";
	["name::toufu"] = "Crab Roe Tofu";
	["desc::toufu"] = "A dish that's said to bring good luck.";
	["detail::toufu"] = "A gourmet dish for the rich and famous. Crab roe ain't cheap!";
	["Recipe::toufu"] = "Carefully extract roe from crab and cook with tofu.";
	["name::pizza"] = "Pizza";
	["desc::pizza"] = "A failure of a dish.";
	["detail::pizza"] = "John once tried to make pizza. John once put pineapple on pizza. John failed at making pizza.";
	["Recipe::pizza"] = "Roll out dough and top with your favorite ingredients, for instance... pineapple?";
	["Recipe::seafood_grill"] = "Impale your favorite seafood on a skewer and roast over an open fire.";
	["name::steam_egg"] = "Steamed Eggs";
	["desc::steam_egg"] = "Just looks delicious.";
	["detail::steam_egg"] = "Melt-in-your-mouth good. Sam's favorite dish.";
	["Recipe::steam_egg"] = "A deceptively complex dish. Don't overcook!";
	["name::tenpura"] = "Seafood Tempura";
	["desc::tenpura"] = "Golden-battered goodness.";
	["detail::tenpura"] = "The buttery golden batter locks in the deliciousness until the moment you sink your teeth in.";
	["Recipe::tenpura"] = "Coat seafood with batter and deep fry until golden.";
	["Recipe::fruit_pie"] = "The best part of making a pie is picking out the fruit.";
	["name::scamble_egg_fruit"] = "Cake";
	["desc::scamble_egg_fruit"] = "Everybody loves cake.";
	["detail::scamble_egg_fruit"] = "So delicious but not so nutritious.";
	["Recipe::scamble_egg_fruit"] = "The perfectly cut fruit is key to this cake's presentation.";
	["name::burger"] = "Burger Set";
	["desc::burger"] = "The everlasting fast-food staple.";
	["detail::burger"] = "Packed to the brim with energy. Start your day right!";
	["Recipe::burger"] = "Nobody can resist a hamburger.";
	["name::Chowder"] = "Seafood Chowder";
	["desc::Chowder"] = "A delicious and thick chowder.";
	["detail::Chowder"] = "So delicious, you can't help but grab a second bowl.";
	["Recipe::Chowder"] = "Change up the spices for a smorgasbord of flavors.";
	["name::sand_fruit_pasta"] = "Sandrupe Pasta";
	["desc::sand_fruit_pasta"] = "Potcrock Isle's home-cooked specialty.";
	["detail::sand_fruit_pasta"] = "The hard-as-nails sandrupe becomes soft as soup after cooking. Pour it all over some noodles—yum!";
	["Recipe::sand_fruit_pasta"] = "Cooking a sandrupe requires skill and heat. LOTS of heat.";
	["name::bai_qie_ji"] = "White Cut Chicken";
	["desc::bai_qie_ji"] = "Only in New Dam City will you find a dish like this.";
	["detail::bai_qie_ji"] = "Intense chicken flavor. Can be served with a variety of tasty dips.";
	["Recipe::bai_qie_ji"] = "Boil it, cut it, stick it in a dip.";
	["name::chips"] = "Fries";
	["desc::chips"] = "A simple fried snack.";
	["detail::chips"] = "Enjoy fries as a snack, paired with your favorite dish, or even AS the dish. When you choose fries, you choose right.";
	["Recipe::chips"] = "The secret to the best fries is the temperature of the oil.";
	["name::lasagne"] = "Lasagna";
	["desc::lasagne"] = "Delicate and rich.";
	["detail::lasagne"] = "Every layer has a different flavor—and a different story.";
	["Recipe::lasagne"] = "The type of cheese you use can completely alter its flavor.";
	["name::takoyaki"] = "Takoyaki";
	["desc::takoyaki"] = "An adorable snack. Eat hot!";
	["detail::takoyaki"] = "Don't eat too fast or you'll burn the roof of your mouth.";
	["Recipe::takoyaki"] = "Requires special tools to make, making this a dish only experts can tackle.";
	["name::pumpkin_soup"] = "Pumpkin Soup";
	["desc::pumpkin_soup"] = "As warm and cozy as it looks.";
	["detail::pumpkin_soup"] = "The aroma and flavor of pumpkin melted down into a rich soup.";
	["Recipe::pumpkin_soup"] = "Melt down the pumpkin to the perfect consistency.";
	["name::taco"] = "Taco";
	["desc::taco"] = "Easy to get addicted to.";
	["detail::taco"] = "Flavor so intense, it'll put hair on your chest.";
	["Recipe::taco"] = "While the rest of the ingredients are up to you, the chilis are essential.";
	["name::mushroom_bacon_pasta"] = "Mushroom Pasta";
	["desc::mushroom_bacon_pasta"] = "Mushrooms bring a new degree of freshness to this pasta.";
	["detail::mushroom_bacon_pasta"] = "Nothing beats the rich delicacy of a mushroom sauce.";
	["Recipe::mushroom_bacon_pasta"] = "Just be careful what mushrooms you use.";
	["name::dietset"] = "Diet Set";
	["desc::dietset"] = "Completely dull and flavorless.";
	["detail::dietset"] = "Useful but bland.";
	["Recipe::dietset"] = "Useful but bland.";
	["name::chowder"] = "Seafood Chowder";
	["desc::chowder"] = " A delicious and thick chowder.";
	["detail::chowder"] = "So delicious, you can't help but grab a second bowl.";
	["Recipe::chowder"] = "Change up the spices for a smorgasbord of flavors.";
	["name::dam_crab_pot"] = "Big Dam Crab Pot";
	["desc::dam_crab_pot"] = "Well Known traditional cuisine in New Dam City.";
	["detail::dam_crab_pot"] = "The extraordinary taste,The cuisine made of crab but it has a taste beyond crab.";
	["Recipe::dam_crab_pot"] = "Not only use the good crab, but the heat is also very important to cook the perfect Big Dam Crab Pot.";
	};
["quest_CH4"]={
	["text::FirstWave"] = "The Wind God";
	["text::Miasma"] = "The MIASMA is attacking New Dam City! Alva needs our help in the control room.";
	["text::Casino"] = "The Wind God is about to activate! Our mission is to make sure everyone in New Dam City gets evacuated to the Coin Palace. Let's head there for more info.";
	["text::Jasper"] = "There are people missing from the Coin Palace. Jasper's still in the park!";
	["text::Casino1"] = "Go to the Coin Palace to ask the citizens of New Dam City for information.";
	["text::Arms"] = "Someone saw the two brothers at the Dragon Market. Go check it out!";
	["text::FanStart"] = "The Wind God will be activated soon. Hurry back to the control room.";
	["text::BackToDaily"] = "The Eye of the Storm";
	["text::Curry"] = "John created some curry for lunch. Go deliver it to Alva and Isabel in the control room.";
	["text::SecondWave"] = "Second Wave";
	["text::MiasmaBack"] = "The MIASMA has returned! Hurry to the control room.";
	["text::FirstWaveFinish"] = "The MIASMA wasn't scary at all. Together with Alva, Isabel, Lee, and the Wind God, John and I were able to protect New Dam City.";
	["text::DamRush"] = "The MIASMA's back! And Alva needs our help. Let's get to the control room.";
	["text::SecondWaveFinish"] = "Solomon broke the Wind God. Though Alva was able to get it started back up... she...";
	};
}
